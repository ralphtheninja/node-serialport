os: unstable
environment:
  prebuild_upload:
    secure: a/seaM+nUnQWhWUnbyz8fl9vPwuyqDTrFviptDykYp2c46vdTvlAxU6yqD/PpDiI
  COVERALLS_REPO_TOKEN:
    secure: iDcAJCYgJK4tffyzEHbMVR8DatJcIN8eY0h29p9JQkl43TcEcm6Z6JLOBpGDk1MJ

  matrix:
  - nodejs_version: "6"
  - nodejs_version: "8"
  - nodejs_version: "9"
  - nodejs_version: "10"
    binary_builder: "true"

platform:
- x86
- x64

install:
- ps: Update-NodeJsInstallation (Get-NodeJsLatestBuild $env:nodejs_version) $env:platform;
- ps: >
    npm config set progress false
    npm config set spin false

- ps: >
    @{
      "nodejs_version" = $env:nodejs_version
      "platform" = $env:platform
      "node binary version" = $(node -v)
      "node platform@arch" = $(node -p 'process.platform + process.arch')
      "npm version" = $(npm -v)
      "APPVEYOR_REPO_COMMIT_MESSAGE" = $env:APPVEYOR_REPO_COMMIT_MESSAGE
      "git latest tag" = "$(git describe --tags --always HEAD)"
      "appveyor_repo_tag" = $env:appveyor_repo_tag
    } | Out-String | Write-Host;

# Check if we're building the latest tag, if so
# then we publish the binaries if tests pass.
- ps: >
    if ($env:appveyor_repo_tag -match "true" -and ("$(git describe --tags --always HEAD)" -eq $env:appveyor_repo_tag_name)) {
      $env:publish_binary = $env:binary_builder;
    }
    if ($env:publish_binary -eq "true") {
      "We're publishing a binary!" | Write-Host
    } else {
      "We're not publishing a binary" | Write-Host
    }
    true;

# We don't currently have a port to test on windows
# - ps: $env:TEST_PORT = "COM1";

build_script:
- npm install --build-from-source

test_script:
- ps: >
    npm run lint
    node ./

# If we run npm test in powershell it'll have the wrong encoding so we have to do it like this
- npm test

- ps: >
    if ($env:publish_binary -eq "true") {
      npm run prebuild-upload
    }
    true;

after_test:
- pip install codecov && codecov --file coverage\coverage.json

deploy: OFF
